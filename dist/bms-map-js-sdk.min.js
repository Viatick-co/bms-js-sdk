let mapview,venue,zoneList,lastSDKKey;const accessTokenMap={"336f0241e602df92487a08b5a0025c705abd1017c8cc0d366fb32a02b30b09bb":"eyJraWQiOiJiQzBvc1RGRVJLUHlNTDB0SStGdXF3bkhqZkFlUGxcL3VCdDN0UncrNjY1WT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzdpMW84NDVrNGd2ZDFhdjRhcTlqZHFtOCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXBpXC8zMzZmMDI0MWU2MDJkZjkyNDg3YTA4YjVhMDAyNWM3MDVhYmQxMDE3YzhjYzBkMzY2ZmIzMmEwMmIzMGIwOWJiIiwiYXV0aF90aW1lIjoxNjM3NTQ5NDk5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuYXAtbm9ydGhlYXN0LTEuYW1hem9uYXdzLmNvbVwvYXAtbm9ydGhlYXN0LTFfUUZ3d21KRjY1IiwiZXhwIjoxNjM3NTUzMDk5LCJpYXQiOjE2Mzc1NDk0OTksInZlcnNpb24iOjIsImp0aSI6Ijk3ZjU5MjhmLWI1ZTctNDM4Zi1hMTIzLTZlOTBmYTljNGYwZiIsImNsaWVudF9pZCI6IjUzN2kxbzg0NWs0Z3ZkMWF2NGFxOWpkcW04In0.BZAaQDWaJYSLeQczSwRPWpDOhprCVbCBdtpaWBO4Aw-YnVyukzSko_-YEfqC_ti5zflYNhQRHJqQfxI4vAa4oAPjuK-FO3FkvGRSJYRUMCgjFMmA9ctnJVkmVAtKR0X_KbIHEipUR1WLDrsaG91kpxWB4wFxEh_I6IierykjFN6ZoxsI0xlObDLcvfkar_5vIHHlz5lmPwwUvublQ0GcOTO4KGcmIkuCpAYm69slpvZqZ7hF5EjhtHazAZBtFN0jg5tBlLcsNWFi1aiADKK0L9JUb4YBhiB_MSkqcDTHNcL_WmLleWXJ8DNiz5QDGGAi6mksiPmWqTk-SIF56mkovQ"},createZoneMarker=content=>`\n  <div class="zone-marker">\n    ${content}\n  </div>`,showZonesDensity=()=>{console.log("venue.locations",venue.locations)};function getLocationForPolygonId(polygonId){return console.log("getLocationForPolygonId -> polygonId",polygonId),venue.locations.find((location=>location.polygons.some((polygon=>polygon.id===polygonId))))}function onPolygonClicked(polygonId){const location=getLocationForPolygonId(polygonId);console.log("onPolygonClicked -> location",location),location&&location.bmsZoneId}function onNothingClicked(){mapview.clearAllPolygonColors()}async function postData(url="",data={},headers){return(await fetch(url,{method:"POST",cache:"no-cache",headers:headers,redirect:"follow",referrerPolicy:"origin",body:JSON.stringify(data)})).json()}const getAccessToken=async function(sdkKey){if(accessTokenMap[sdkKey])return accessTokenMap[sdkKey];{const headers={grant_type:"client_credentials",scope:sdkKey,"Content-Type":"application/json"},response=await postData("https://bms-api.viatick.com/dev/sdk/oauth2/token",{},headers);return console.log("response",response),accessTokenMap[sdkKey]=response.access_token,response.access_token}},getNewAccessToken=async function(sdkKey){const headers={grant_type:"client_credentials",scope:sdkKey},response=await postData("https://bms-api.viatick.com/dev/sdk/oauth2/token",{},headers);return accessTokenMap[sdkKey]=response.access_token,response.access_token},bmsGetMaps=async function(sdkKey){const accessToken=await getAccessToken(sdkKey);try{let input={field:"getMaps",arguments:{},authorization:"Bearer "+accessToken},response=await postData("https://bms-api.viatick.com/dev/api/restful",input);if(console.log("response",response),403==response.statusCode&&"Unauthorized"==response.type){await getNewAccessToken(sdkKey);return bmsGetMaps(sdkKey)}return response}catch(e){if(console.error("e",e),403==e.response.statusCode&&"Unauthorized"==e.response.type){await getNewAccessToken(sdkKey);return bmsGetMaps(sdkKey)}}};class BMSSDK{async initMap(mapViewId,sdkKey){return lastSDKKey=sdkKey,new Promise((function(resolve,reject){function initializeMapOptions(){mapview.addInteractivePolygonsForAllLocations(),mapview.labelAllLocations({appearance:{text:{foregroundColor:"white",backgroundColor:"#333"},marker:{foregroundColor:{active:"white",inactive:void 0},backgroundColor:{active:"#333",inactive:void 0}}}}),resolve(mapview)}console.log("mapViewId",mapViewId),console.log("sdkKey",sdkKey);var js=document.createElement("script");js.type="text/javascript",js.src="https://d1p5cqqchvbqmy.cloudfront.net/websdk/v1.63.16/mappedin.js",js.onload=function(){(async function(){const maps=await bmsGetMaps(sdkKey);console.log("maps",maps);var div=document.getElementById(mapViewId),venueOptions={clientId:"5f93249aa5fdf5001a6b9757",clientSecret:"mpXGa2zgY1b0b8OhigR0oGlOZ08uT7vHrpIe9is5RMAyXEKL",perspective:"Website",things:{venue:["slug","name"],categories:["name"],maps:["name","elevation","shortName"],locations:["name","type","description","icon","logo"]},venue:maps[0].providerMapId},options={mapview:{antialias:"AUTO",mode:window.Mappedin.modes.TEST,onDataLoaded:initializeMapOptions},venue:venueOptions};return Mappedin.initialize(options,div).then((function(data){return window.map=data,mapview=data.mapview,mapview.colors={hover:13421772,select:5022204,text:0,path:16745292,pathPulse:16777215,textSelect:16777215},venue=data.venue,zoneList=venue.locations,Promise.resolve(mapview)}))})().then((function(m){console.log("initMappedIn","done")}))},document.body.appendChild(js)}))}addMarker(zoneName,content,onClicked){const zone=zoneList.find((function(z){return z.name==zoneName}));console.log("zoneList",zoneList),console.log("zone",zone);const marker=mapview.createMarker(createZoneMarker(content),mapview.getPositionPolygon(zone.polygons[0].id),"zone-mark-container");marker&&marker.addEventListener("click",(e=>{onClicked(zone)}))}addMarkers(zoneContents){zoneContents.forEach((function(zoneContent){const zoneName=zoneContent.zoneName,content=zoneContent.content,onClicked=zoneContent.onClicked,zone=zoneList.find((function(z){return z.name==zoneName}));console.log("zoneList",zoneList),console.log("zone",zone);const marker=mapview.createMarker(createZoneMarker(content),mapview.getPositionPolygon(zone.polygons[0].id),"zone-mark-container");marker&&marker.addEventListener("click",(e=>{onClicked(zone)}))}))}async getLastProperZoneRecords(){const accessToken=await getAccessToken(lastSDKKey);try{let input={field:"getLastProperZoneRecords",arguments:{},authorization:"Bearer "+accessToken},response=await postData("https://bms-api.viatick.com/dev/api/restful",input);if(console.log("response",response),403==response.statusCode&&"Unauthorized"==response.type){await getNewAccessToken(sdkKey);return bmsGetMaps(sdkKey)}return response}catch(e){if(console.error("e",e),403==e.response.statusCode&&"Unauthorized"==e.response.type){await getNewAccessToken(sdkKey);return getLastProperZoneRecords(sdkKey)}}}async getLastInversedZoneRecords(){const accessToken=await getAccessToken(lastSDKKey);try{let input={field:"getLastInversedZoneRecords",arguments:{},authorization:"Bearer "+accessToken},response=await postData("https://bms-api.viatick.com/dev/api/restful",input);if(console.log("response",response),403==response.statusCode&&"Unauthorized"==response.type){await getNewAccessToken(sdkKey);return bmsGetMaps(sdkKey)}return response}catch(e){if(console.error("e",e),403==e.response.statusCode&&"Unauthorized"==e.response.type){await getNewAccessToken(sdkKey);return getLastInversedZoneRecords(sdkKey)}}}async getZones(){const accessToken=await getAccessToken(lastSDKKey);try{let input={field:"getZones",arguments:{},authorization:"Bearer "+accessToken},response=await postData("https://bms-api.viatick.com/dev/api/restful",input);if(console.log("response",response),403==response.statusCode&&"Unauthorized"==response.type){await getNewAccessToken(sdkKey);return bmsGetMaps(sdkKey)}return response}catch(e){if(console.error("e",e),403==e.response.statusCode&&"Unauthorized"==e.response.type){await getNewAccessToken(sdkKey);return getZones(sdkKey)}}}}